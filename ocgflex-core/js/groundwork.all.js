// Generated by CoffeeScript 1.6.1
/*
 *
 *  GroundworkCSS JS by Gary Hepting - https://github.com/groundworkcss/groundwork
 *  
 *  Open source under the BSD License. 
 *
 *  Copyright © 2013 Gary Hepting. All rights reserved.
 *
*/

/* --------------------------------------------
     Begin jQuery.modals.coffee
--------------------------------------------
*/

/*
 *
 *  jQuery Modals by Gary Hepting
 *   https://github.com/ghepting/modal  
 *
*/

var equalizeColumns, limitPaginationItems;

(function($) {
  var elems, modals;
  if (jQuery('div#iframeModal').length < 1) {
    jQuery('body').append('<div class="iframe modal" id="iframeModal"><iframe marginheight="0" marginwidth="0" frameborder="0"></iframe></div>');
    jQuery('div#iframeModal').prepend('<i class="close icon-remove"></i>').prepend('<i class="fullscreen icon-resize-full"></i>');
  }
  jQuery('a.modal').each(function() {
    jQuery(this).attr('data-url', jQuery(this).attr('href'));
    return jQuery(this).attr('href', '#iframeModal');
  });
  jQuery('a.modal').on("click", function(e) {
    jQuery('div#iframeModal iframe').replaceWith('<iframe marginheight="0" marginwidth="0" frameborder="0" width="100%" height="100%" src="' + jQuery(this).attr('data-url') + '"></iframe>');
    e.preventDefault();
    return false;
  });
  elems = [];
  $.fn.modal = function() {
    this.each(function() {
      var $this;
      jQuery(this).not('#iframeModal').wrapInner('<div class="modal-content"></div>');
      jQuery(this).prepend('<i class="close icon-remove"></i>').prepend('<i class="fullscreen icon-resize-full"></i>').appendTo('body');
      $this = jQuery(this);
      return jQuery('[href=#' + jQuery(this).attr('id') + ']').on("click", function(e) {
        modals.open(jQuery(this).attr('href'), jQuery(this).hasClass('fullscreen'));
        e.preventDefault();
        return false;
      });
    });
    jQuery('div.modal .close').on("click", function() {
      return modals.close();
    });
    return jQuery('div.modal .fullscreen').on("click", function() {
      return modals.fullscreen(jQuery(this).parent('div.modal'));
    });
  };
  modals = (function() {
    var close, fullscreen, open;
    jQuery('body').addClass('modal-ready');
    if (jQuery("#overlay").length < 1) {
      jQuery('body').append('<div id="overlay"></div>');
    }
    jQuery('#overlay, div.modal .close').bind("click", function(e) {
      return close();
    });
    open = function(elem, fullscreen) {
      jQuery(window).bind("keydown", function(e) {
        var keyCode;
        keyCode = (e.which ? e.which : e.keyCode);
        if (keyCode === 27) {
          return close();
        }
      });
      jQuery(elem).addClass("active");
      if (!jQuery(elem).hasClass('iframe')) {
        jQuery(elem).css({
          width: 'auto',
          height: 'auto'
        });
        jQuery(elem).css({
          height: jQuery(elem).outerHeight()
        });
      }
      jQuery(elem).css({
        top: '50%',
        left: '50%',
        'margin-top': (jQuery(elem).outerHeight() / -2) + 'px',
        'margin-left': (jQuery(elem).outerWidth() / -2) + 'px'
      });
      setTimeout(function() {
        return jQuery('body').addClass("modal-active");
      }, 0);
      setTimeout(function() {
        return jQuery('body').removeClass('modal-ready');
      }, 400);
      if (fullscreen) {
        modals.fullscreen(elem);
      }
    };
    close = function() {
      var modal;
      modal = jQuery('div.modal.active');
      jQuery(window).unbind("keydown");
      jQuery('body').removeClass("modal-active").addClass('modal-ready');
      if (modal.hasClass('iframe')) {
        jQuery('div#iframeModal iframe').replaceWith('<iframe marginheight="0" marginwidth="0" frameborder="0"></iframe>');
        modal.css({
          width: '80%',
          height: '80%'
        });
      } else {
        modal.css({
          width: 'auto',
          height: 'auto'
        });
      }
      modal.css({
        top: '10%',
        left: '10%',
        'max-width': '80%',
        'max-height': '80%',
        'margin-top': 0,
        'margin-left': 0
      });
      modal.removeClass("active").removeClass("fullscreen");
      jQuery('i.fullscreen', modal).removeClass('icon-resize-small').addClass('icon-resize-full');
    };
    fullscreen = function(elem) {
      if (jQuery('div.modal.active').hasClass('fullscreen')) {
        jQuery('div.modal i.fullscreen').removeClass('icon-resize-small').addClass('icon-resize-full');
        if (jQuery('div.modal.active').hasClass('iframe')) {
          jQuery('div.modal.active').css({
            width: '80%',
            height: '80%'
          });
        } else {
          jQuery('div.modal.active').css({
            width: 'auto',
            height: 'auto'
          });
          jQuery('div.modal.active').css({
            height: jQuery('div.modal.active').outerHeight()
          });
        }
        jQuery('div.modal.active').removeClass('fullscreen').css({
          'max-width': '80%',
          'max-height': '80%'
        });
        jQuery('div.modal.active').delay(100).css({
          top: '50%',
          left: '50%',
          'margin-top': (jQuery('div.modal.active').outerHeight() / -2) + 'px',
          'margin-left': (jQuery('div.modal.active').outerWidth() / -2) + 'px'
        });
      } else {
        jQuery('div.modal i.fullscreen').addClass('icon-resize-small').removeClass('icon-resize-full');
        jQuery('div.modal.active').addClass('fullscreen').css({
          top: 0,
          left: 0,
          'margin-top': 0,
          'margin-left': 0,
          width: '100%',
          height: '100%',
          'max-width': '100%',
          'max-height': '100%'
        });
      }
    };
    return {
      open: open,
      close: close,
      fullscreen: fullscreen
    };
  })();
  return jQuery(window).resize(function() {
    return jQuery('div.modal.active').each(function() {
      if (!jQuery(this).hasClass('fullscreen')) {
        jQuery(this).removeClass('active').css({
          top: '50%',
          left: '50%',
          'margin-top': (jQuery(this).outerHeight() / -2) + 'px',
          'margin-left': (jQuery(this).outerWidth() / -2) + 'px'
        }).addClass('active');
        if (!jQuery(this).hasClass('iframe')) {
          jQuery(this).css({
            height: 'auto'
          });
          return jQuery(this).css({
            height: jQuery(this).outerHeight()
          });
        }
      }
    });
  });
})(jQuery);

/* --------------------------------------------
     Begin jQuery.responsiveTables.coffee
--------------------------------------------
*/


/*
 *
 *  jQuery ResponsiveTables by Gary Hepting - https://github.com/ghepting/responsiveTables
 *  
 *  Open source under the BSD License. 
 *
 *  Copyright © 2013 Gary Hepting. All rights reserved.
 *
*/


(function($) {
  var elems;
  elems = [];
  $.fn.responsiveTable = function(options) {
    var settings;
    settings = {
      compressor: options.compressor || 10,
      minSize: options.minSize || Number.NEGATIVE_INFINITY,
      maxSize: options.maxSize || Number.POSITIVE_INFINITY,
      padding: 2,
      height: "auto",
      adjust_parents: true
    };
    return this.each(function() {
      var columns, elem, fontSize, rows;
      elem = jQuery(this);
      elem.attr('data-compression', settings.compressor);
      elem.attr('data-min', settings.minSize);
      elem.attr('data-max', settings.maxSize);
      elem.attr('data-padding', settings.padding);
      columns = jQuery("tr", elem).first().children("th, td").length;
      rows = jQuery("tr", elem).length;
      if (settings.height !== "auto") {
        $this.css("height", settings.height);
        if (settings.adjust_parents) {
          $this.parents().each(function() {
            return jQuery(this).css("height", "100%");
          });
        }
      }
      jQuery("tr th, tr td", elem).css("width", Math.floor(100 / columns) + "%");
      jQuery("tr th, tr td", elem).css("height", Math.floor(100 / rows) + "%");
      fontSize = Math.floor(Math.max(Math.min(elem.width() / settings.compressor, parseFloat(settings.maxSize)), parseFloat(settings.minSize)));
      jQuery("tr th, tr td", elem).css("font-size", fontSize + "px");
      return elems.push(elem);
    });
  };
  return jQuery(window).on("resize", function() {
    return jQuery(elems).each(function() {
      var elem, fontSize;
      elem = jQuery(this);
      fontSize = Math.floor(Math.max(Math.min(elem.width() / (elem.attr('data-compression')), parseFloat(elem.attr('data-max'))), parseFloat(elem.attr('data-min'))));
      return jQuery("tr th, tr td", elem).css("font-size", fontSize + "px");
    });
  });
})(jQuery);

/* --------------------------------------------
     Begin jQuery.responsiveText.coffee
--------------------------------------------
*/


/*
 *
 *  jQuery ResponsiveText by Gary Hepting - https://github.com/ghepting/responsiveText
 *  
 *  Open source under the BSD License. 
 *
 *  Copyright © 2013 Gary Hepting. All rights reserved.
 *
*/


(function($) {
  var elems;
  elems = [];
  $.fn.responsiveText = function(options) {
    var settings;
    settings = {
      compressor: options.compressor || 10,
      minSize: options.minSize || Number.NEGATIVE_INFINITY,
      maxSize: options.maxSize || Number.POSITIVE_INFINITY
    };
    return this.each(function() {
      var elem;
      elem = jQuery(this);
      elem.attr('data-compression', settings.compressor);
      elem.attr('data-min', settings.minSize);
      elem.attr('data-max', settings.maxSize);
      elem.css("font-size", Math.floor(Math.max(Math.min(elem.width() / settings.compressor, parseFloat(settings.maxSize)), parseFloat(settings.minSize))));
      return elems.push(elem);
    });
  };
  return jQuery(window).on("resize", function() {
    return jQuery(elems).each(function() {
      var elem;
      elem = jQuery(this);
      return elem.css("font-size", Math.floor(Math.max(Math.min(elem.width() / (elem.attr('data-compression')), parseFloat(elem.attr('data-max'))), parseFloat(elem.attr('data-min')))));
    });
  });
})(jQuery);

/* --------------------------------------------
     Begin jQuery.tooltip.coffee
--------------------------------------------
*/


/*
 *
 *  jQuery Tooltips by Gary Hepting - https://github.com/ghepting/jQuery-tooltips
 *  
 *  Open source under the BSD License. 
 *
 *  Copyright © 2013 Gary Hepting. All rights reserved.
 *
*/


/*
(function($) {
  return $.fn.tooltip = function(options) {
    var closetooltip, defaults, delayShow, getElementPosition, resettooltip, setPosition, showtooltip, tooltip, trigger;
    defaults = {
      topOffset: 0,
      delay: 100,
      speed: 100
    };
    options = $.extend(defaults, options);
    tooltip = jQuery('#tooltip');
    delayShow = '';
    trigger = '';
    if (jQuery('#tooltip').length !== 1) {
      tooltip = jQuery("<div id=\"tooltip\"></div>");
      tooltip.appendTo("body").hide();
    }
    getElementPosition = function(el) {
      var bottom, left, offset, right, top, win;
      offset = el.offset();
      win = jQuery(window);
      return {
        top: top = offset.top - win.scrollTop(),
        left: left = offset.left - win.scrollLeft(),
        bottom: bottom = win.height() - top - el.outerHeight(),
        right: right = win.width() - left - el.outerWidth()
      };
    };
    setPosition = function(trigger) {
      var attrs, coords, height, width;
      coords = getElementPosition(trigger);
      if (tooltip.outerWidth() > (jQuery(window).width() - 20)) {
        tooltip.css('width', jQuery(window).width() - 20);
      }
      attrs = {};
      tooltip.css('max-width', Math.min(jQuery(window).width() - parseInt(jQuery('body').css('padding-left')) - parseInt($('body').css('padding-right')), parseInt(tooltip.css('max-width'))));
      width = tooltip.outerWidth();
      height = tooltip.outerHeight();
      if (coords.left <= coords.right) {
        tooltip.addClass('left');
        attrs.left = coords.left;
      } else {
        tooltip.addClass('right');
        attrs.right = coords.right;
      }
      if ((coords.top - options.topOffset) > (height + 20)) {
        tooltip.addClass('top');
        attrs.top = (trigger.offset().top - height) - 20;
      } else {
        tooltip.addClass('bottom');
        attrs.top = trigger.offset().top + trigger.outerHeight() - 4;
      }
      return tooltip.css(attrs);
    };
    resettooltip = function() {
      return tooltip.text('').removeClass('left right top bottom').css({
        left: 'auto',
        right: 'auto',
        top: 'auto',
        bottom: 'auto',
        width: 'auto',
        'padding-left': 'auto',
        'padding-right': 'auto'
      });
    };
    closetooltip = function() {
      tooltip.stop().hide();
      resettooltip();
      return jQuery('[role=tooltip]').removeClass('on');
    };
    showtooltip = function(trigger) {
      clearTimeout(delayShow);
      return delayShow = setTimeout(function() {
        tooltip.css({
          "opacity": 0,
          "display": "block"
        }).text(trigger.attr('data-title'));
        setPosition(trigger);
        trigger.addClass('on');
        console.log(tooltip.css('display'));
        return tooltip.animate({
          top: "+=10",
          opacity: 1
        }, options.speed);
      }, options.delay);
    };
    this.each(function() {
      var $this;
      $this = jQuery(this);
      $this.attr('role', 'tooltip').attr('data-title', $this.attr('title'));
      return $this.removeAttr("title");
    });
    jQuery('body').on('focus', '[role=tooltip]', function() {
      return showtooltip(jQuery(this));
    }).on('blur', '[role=tooltip]', function() {
      clearTimeout(delayShow);
      return closetooltip();
    }).on('mouseenter', '[role=tooltip]:not(input,select,textarea)', function() {
      return showtooltip($(this));
    }).on('mouseleave', '[role=tooltip]:not(input,select,textarea)', function() {
      clearTimeout(delayShow);
      return closetooltip();
    });
    return jQuery(window).on({
      scroll: function() {
        trigger = jQuery('[role=tooltip].on');
        if (trigger.length) {
          setPosition(trigger);
          return jQuery('#tooltip').css({
            top: "+=10"
          });
        }
      }
    });
  };
})(jQuery);
*/

/* --------------------------------------------
     Begin disabled.coffee
--------------------------------------------
*/


jQuery(function() {
  jQuery('.disabled').each(function() {
    jQuery(this).attr('tabindex', '-1');
    jQuery(this).find('a').attr('tabindex', '-1');
    return jQuery(this).find('input, select, textarea').addClass('disabled').attr('tabindex', '-1').attr('readonly', 'readyonly');
  });
  jQuery('body').on('click', '.disabled, .disabled *', function(e) {
    e.preventDefault();
    return false;
  });
});

/* --------------------------------------------
     Begin equalizeColumns.coffee
--------------------------------------------
*/


jQuery(window).load(function() {
  return equalizeColumns();
});

jQuery(window).resize(function() {
  return equalizeColumns();
});

equalizeColumns = function() {
  return jQuery('.row.equalize').each(function() {
    var $row, collapsed, tallest;
    $row = jQuery(this);
    tallest = 0;
    collapsed = false;
    jQuery(this).children('*').each(function(i) {
      jQuery(this).css('min-height', '1px');
      collapsed = jQuery(this).outerWidth() === $row.outerWidth();
      if (!collapsed) {
        if (!jQuery(this).hasClass('equal')) {
          jQuery(this).addClass('equal');
        }
        if (jQuery(this).outerHeight() > tallest) {
          return tallest = jQuery(this).outerHeight();
        }
      }
    });
    if (!collapsed) {
      return jQuery(this).children('*').css('min-height', tallest);
    }
  });
};

/* --------------------------------------------
     Begin forms.coffee
--------------------------------------------
*/


jQuery(function() {
  jQuery('body').on('click', '\
    .error input, \
    .error textarea, \
    .invalid input, \
    .invalid textarea, \
    input.error, \
    textarea.error, \
    input.invalid, \
    textarea.invalid', function(e) {
    return jQuery(this).focus().select();
  });
  jQuery('span.select select').each(function() {
    if (jQuery(this).children('option').first().val() === '' && jQuery(this).children('option').first().attr('selected')) {
      return jQuery(this).addClass('unselected');
    } else {
      return jQuery(this).removeClass('unselected');
    }
  });
  jQuery('body').on('change', 'span.select select', function(e) {
    if (jQuery(this).children('option').first().val() === '' && jQuery(this).children('option').first().attr('selected')) {
      return jQuery(this).addClass('unselected');
    } else {
      return jQuery(this).removeClass('unselected');
    }
  });
});

/* --------------------------------------------
     Begin menus.coffee
--------------------------------------------
*/


jQuery(function() {
  var delay, openMenu,
    _this = this;
  delay = '';
  openMenu = function(target) {
    return jQuery(target).parent('li.menu').toggleClass('on');
  };
  jQuery('body').on('mouseenter', '.nav > ul > li.menu:not(.disabled)', function(e) {
    if (jQuery(window).width() >= 768) {
      clearTimeout(delay);
      jQuery('.nav > ul > li.menu.on').removeClass('on');
      return jQuery(this).addClass('on');
    }
  });
  jQuery('body').on('mouseleave', '.nav > ul > li.menu:not(.disabled)', function(e) {
    if (jQuery(window).width() >= 768) {
      return delay = setTimeout((function() {
        return jQuery('.nav > ul > li.menu.on').removeClass('on');
      }), 350);
    }
  });
  jQuery('body').on('click', '.nav > ul > li.menu:not(.disabled) > a', function(e) {
    if (Modernizr.touch || jQuery(window).width() < 768) {
      openMenu(e.target);
    } else {
      jQuery('.nav > ul > li.menu.on').removeClass('on');
      jQuery(e.target).parents('li.menu').addClass('on');
    }
    e.preventDefault();
    return false;
  });
  jQuery('body').on('focus', '.nav > ul > li:not(.on) > a', function() {
    return jQuery('.nav > ul > li.menu.on').removeClass('on');
  });
  jQuery('body').on('focus', '.nav > ul > li.menu > a', function(e) {
    openMenu(e.target);
    e.preventDefault();
    return false;
  });
  jQuery('body').on('click', function(e) {
    if (jQuery(e.target).hasClass('dropdown')) {
      jQuery(e.target).toggleClass('on');
    } else {
      if (jQuery('.dropdown').filter('.on').length) {
        jQuery('.dropdown').filter('.on').removeClass('on');
      }
    }
    if (jQuery('.nav > ul > li').filter('.menu.on').length) {
      return jQuery('.nav > ul > li').filter('.menu.on').removeClass('on');
    }
  });
  jQuery('body').on('focus', '.dropdown', function(e) {
    return jQuery(this).addClass('on');
  });
  jQuery('body').on('blur', '.dropdown li:last-child a', function(e) {
    return jQuery('.dropdown').filter('.on').removeClass('on');
  });
  jQuery('.nav.menu').each(function() {
    if (!jQuery(this).attr('data-label')) {
      jQuery(this).attr('data-label', 'Menu');
    }
    if (!(jQuery(this).find('.menu-toggle').length > 0)) {
      return $(this).prepend('<a href="#" class="menu-toggle"><i class="icon-reorder"></i></a>');
    }
  });
  jQuery('body').on('click', '.nav.menu .menu-toggle', function(e) {
    jQuery(this).parent('.nav.menu').toggleClass('on');
    e.preventDefault();
    return false;
  });
  jQuery('body').on('focus', '.menu-toggle', function(e) {
    return jQuery(e.target).parent('.nav.menu').addClass('on');
  });
  jQuery('body').on('blur', '.nav.menu > ul > li:last-child a', function(e) {
    return jQuery('.nav.menu').filter('.on').removeClass('on');
  });
});

jQuery(window).on('resize', function() {
  if (jQuery('.nav > ul > li.menu.on').length > 1) {
    return jQuery('.nav > ul > li.menu.on').removeClass('on').first().addClass('on');
  }
});

/* --------------------------------------------
     Begin modals.coffee
--------------------------------------------
*/


/*
 * Requires jQuery.modals.js
*/


jQuery(function() {
  return jQuery('div.modal, div[role=dialog]').modal();
});

/* --------------------------------------------
     Begin pagination.coffee
--------------------------------------------
*/


jQuery(function() {
  limitPaginationItems();
  jQuery('body').on('click', '.pagination ul > li:not(.next, .prev) a', function(e) {
    jQuery('.pagination ul > li:not(.next, .prev)').removeClass('active');
    jQuery(this).parent('li').addClass('active');
    if (jQuery(this).parent('li').hasClass('first')) {
      jQuery('.pagination ul > li.prev').addClass('disabled');
    } else {
      jQuery('.pagination ul > li.prev').removeClass('disabled');
    }
    if (jQuery(this).parent('li').hasClass('last')) {
      jQuery('.pagination ul > li.next').addClass('disabled');
    } else {
      jQuery('.pagination ul > li.next').removeClass('disabled');
    }
    limitPaginationItems();
    e.preventDefault();
    return false;
  });
  jQuery('body').on('click', '.pagination ul > li.prev:not(.disabled)', function(e) {
    var el;
    jQuery('.pagination ul > li.next').removeClass('disabled');
    el = jQuery('.pagination ul > li.active');
    if (!el.hasClass('first')) {
      el.removeClass('active');
      el.prev().addClass('active');
      limitPaginationItems();
    }
    if (jQuery('.pagination ul > li.active').hasClass('first')) {
      jQuery(this).addClass('disabled');
    }
    e.preventDefault();
    return false;
  });
  jQuery('body').on('click', '.pagination ul > li.next:not(.disabled)', function(e) {
    var el;
    jQuery('.pagination ul > li.prev').removeClass('disabled');
    el = jQuery('.pagination ul > li.active');
    if (!el.hasClass('last')) {
      el.removeClass('active');
      el.next().addClass('active');
      limitPaginationItems();
    }
    if (jQuery('.pagination ul > li.active').hasClass('last')) {
      jQuery(this).addClass('disabled');
    }
    e.preventDefault();
    return false;
  });
  jQuery('body').on('click', '.pagination ul > li.disabled a', function(e) {
    e.preventDefault();
    return false;
  });
});

jQuery(window).resize(function() {
  return limitPaginationItems();
});

limitPaginationItems = function() {
  return jQuery('.pagination ul').each(function() {
    var pagination, totalItemsWidth, visibleItemsWidth, visibleSpace, _results;
    pagination = jQuery(this);
    visibleSpace = pagination.outerWidth() - pagination.children('li.prev').outerWidth() - pagination.children('li.next').outerWidth();
    totalItemsWidth = 0;
    pagination.children('li').each(function() {
      return totalItemsWidth += $(this).outerWidth();
    });
    pagination.children('li').not('.prev, .next, .active').hide();
    visibleItemsWidth = 0;
    pagination.children('li:visible').each(function() {
      return visibleItemsWidth += jQuery(this).outerWidth();
    });
    _results = [];
    while ((visibleItemsWidth + 29) < visibleSpace && (visibleItemsWidth + 29) < totalItemsWidth) {
      pagination.children('li:visible').not('.next').last().next().show();
      visibleItemsWidth = 0;
      pagination.children('li:visible').each(function() {
        return visibleItemsWidth += jQuery(this).outerWidth();
      });
      if ((visibleItemsWidth + 29) <= visibleSpace) {
        pagination.children('li:visible').not('.prev').first().prev().show();
        visibleItemsWidth = 0;
        pagination.children('li:visible').each(function() {
          return visibleItemsWidth += jQuery(this).outerWidth();
        });
      }
      visibleItemsWidth = 0;
      _results.push(pagination.children('li:visible').each(function() {
        return visibleItemsWidth += jQuery(this).outerWidth();
      }));
    }
    return _results;
  });
};

/* --------------------------------------------
     Begin responsiveTables.coffee
--------------------------------------------
*/


/*
 * Requires jQuery.responsiveText.js
*/


jQuery(function() {
  return jQuery('table.responsive').each(function(index, object) {
    var compression, max, min, padding;
    compression = 30;
    min = 8;
    max = 13;
    padding = 0;
    compression = parseFloat(jQuery(this).attr('data-compression') || compression);
    min = parseFloat(jQuery(this).attr('data-min') || min);
    max = parseFloat(jQuery(this).attr('data-max') || max);
    padding = parseFloat(jQuery(this).attr('data-padding') || padding);
    return jQuery(object).responsiveTable({
      compressor: compression,
      minSize: min,
      maxSize: max,
      padding: padding
    });
  });
});

/* --------------------------------------------
     Begin responsiveText.coffee
--------------------------------------------
*/


/*
 * Requires jQuery.responsiveText.js
*/


jQuery(function() {
  return jQuery('.responsive').not('table').each(function(index, object) {
    var $this, compression, max, min, scrollReset, scrollTime;
    compression = 10;
    min = 10;
    max = 200;
    scrollTime = 650;
    scrollReset = 200;
    compression = parseFloat(jQuery(this).attr('data-compression') || compression);
    min = parseFloat(jQuery(this).attr('data-min') || min);
    max = parseFloat(jQuery(this).attr('data-max') || max);
    jQuery(object).responsiveText({
      compressor: compression,
      minSize: min,
      maxSize: max
    });
    $this = jQuery(this);
    return jQuery(this).hover((function() {
      var difference;
      difference = $this.get(0).scrollWidth - $this.width();
      console.log(difference);
      if (difference > 0) {
        return $this.stop().animate({
          "text-indent": -difference
        }, scrollTime);
      }
    }), function() {
      return $this.stop().animate({
        "text-indent": 0
      }, scrollReset);
    });
  });
});

/* --------------------------------------------
     Begin tabs.coffee
--------------------------------------------
*/


jQuery(function() {
  return jQuery('body').on('click', '.tabs > ul li a[href^=#], [role=tab] a', function(e) {
    var tabs;
    if (!jQuery(this).hasClass('disabled')) {
      if (jQuery(this).parents('[role=tabpanel]').length > 0) {
        tabs = jQuery(this).parents('[role=tabpanel]');
      } else {
        tabs = jQuery(this).parents('.tabs');
      }
      tabs.find('> ul li a, [role=tab] a').removeClass('active');
      jQuery(this).addClass('active');
      tabs.children('div, [role=tabpanel]').removeClass('active');
      tabs.children(jQuery(this).attr('href')).addClass('active');
    }
    e.preventDefault();
    return false;
  });
});

/* --------------------------------------------
     Begin tooltips.coffee
--------------------------------------------
*/


/*
 * Requires jQuery.tooltips.js
*/


/*
jQuery(function() {
  return jQuery('.tooltip[title]').tooltip();
});
*/

/* --------------------------------------------
     Begin tiles.coffee
--------------------------------------------
*/


jQuery(function() {
  jQuery('.tiles').each(function() {
    jQuery(this).find('.tile').attr('role', 'button');
    return jQuery(this).find('.tile[data-value=' + jQuery(this).find('input.value, select.value').val() + ']').addClass('active');
  });
  jQuery('body').on('click', '.tiles .tile', function(e) {
    var tiles;
    if (!jQuery(this).hasClass('disabled')) {
      tiles = jQuery(this).parents('.tiles');
      tiles.find('.tile').removeClass('active');
      tiles.find('input.value, select.value').val(jQuery(this).data('value')).change();
      jQuery(this).addClass('active');
    }
    e.preventDefault();
    return false;
  });
  return jQuery('body').on('change', '.tiles input.value, .tiles select.value', function(e) {
    var tiles;
    tiles = jQuery(this).parents('.tiles');
    tiles.find('.tile').removeClass('active');
    return tiles.find('.tile[data-value=' + jQuery(this).val() + ']').addClass('active');
  });
});
